/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <4 16>;
            layers = <1>;
        };

        cmben_empty {
            bindings = <&none>;
            key-positions = <4 16>;
            layers = <0>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <7 19>;
            layers = <0>;
        };

        cmbru_empty {
            bindings = <&none>;
            key-positions = <7 19>;
            layers = <1>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        mo_comma_space: mo_comma_space {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_COMMA_SPACE";
            bindings = <&mo>, <&comma_space>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };
    };

    macros {
        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F21>, <&macro_wait_time 25>;

            label = "TO_EN";
        };

        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F22>, <&macro_wait_time 25>;

            label = "TO_RU";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };

        comma_space: comma_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMA_SPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC   &kp Q          &kp W         &kp E        &kp R        &kp T        &kp Y        &kp U                &kp I             &kp O              &kp P             &kp MINUS
&kp CLCK  &hrm LSHIFT A  &hrm LCTRL S  &hrm LALT D  &hrm LGUI F  &kp G        &kp H        &hrm RGUI J          &hrm RALT K       &hrm RCTRL L       &hrm RSHIFT SEMI  &kp SQT
&kp TAB   &kp Z          &kp X         &kp C        &kp V        &kp B        &kp N        &kp M                &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp FSLH          &kp RIGHT_SHIFT
                         &none         &kp BSPC     &kp RU_DOT   &kp ENTER    &lt 6 SPACE  &mo_comma_space 4 0  &kp COMMA         &none
            >;
        };

        ru {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans         &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans         &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans         &trans
            >;
        };

        win {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LBKT  &kp UP    &kp RBKT   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans     &trans  &trans
                &trans  &trans  &trans  &kp RGUI    &trans  &trans    &trans    &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS              &kp N7       &kp N8        &kp N9  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0                &kp N1       &kp N2        &kp N3  &kp BSPC       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(UNDER)         &kp N4       &kp N5        &kp N6  &kp LA(BSPC)   &trans
                &trans  &trans  &trans  &trans    &kp LG(RS(NUMBER_3))  &kp RU_DOT   &kp RU_COMMA  &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans     &trans     &trans    &trans          &trans    &kp F11  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI        &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
&trans  &trans     &trans     &trans    &trans          &trans    &kp F12  &kp F4  &kp F5  &kp F6  &trans  &trans
                   &trans     &trans    &kp RS(RA(V))   &kp F13   &trans  &trans  &trans  &trans
            >;
        };

        sys {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &bootloader
&trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans          &trans        &trans        &trans
&sys_reset   &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &sys_reset
                     &trans  &trans  &trans  &trans    &trans  &trans        &trans          &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans     &trans     &trans    &trans    &trans    &trans  &kp PG_DN     &kp UP    &kp PG_UP  &trans        &trans
&trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans    &trans  &kp LEFT      &kp DOWN  &kp RIGHT  &kp BSPC      &trans
&trans  &trans     &trans     &trans    &trans    &trans    &trans  &kp LG(FSLH)  &trans    &trans     &kp LA(BSPC)  &trans
                   &trans     &trans    &trans    &trans    &trans  &trans        &trans    &trans
            >;
        };
    };
};
